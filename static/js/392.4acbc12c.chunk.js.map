{"version":3,"file":"static/js/392.4acbc12c.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/Cast/cast.module.css?8374","components/Cast/Cast.jsx","service/API.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"myActorImg\":\"cast_myActorImg__WLIDZ\",\"myActorList\":\"cast_myActorList__rwA1s\",\"myActorName\":\"cast_myActorName__lsCSY\",\"myActorCharacter\":\"cast_myActorCharacter__GjR54\"};","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchActorInfo } from 'service/API';\nimport styles from './cast.module.css';\n\nconst Cast = () => {\n  const [actors, setActors] = useState([]);\n  const { movieId } = useParams();\n  console.log(movieId);\n\n  useEffect(() => {\n    if (!movieId) {\n      return;\n    }\n    const fetchInfo = async () => {\n      try {\n        const response = await fetchActorInfo(movieId);\n        setActors(response.cast);\n        console.log(response);\n      } catch (error) {\n        console.log(error.message);\n      }\n    };\n    fetchInfo();\n  }, [movieId]);\n\n  return (\n    <div>\n      <ul className={styles.myActorList}>\n        {actors?.map(el => (\n          <li key={el.id}>\n            <p className={styles.myActorName}>{el.name}</p>\n            <p className={styles.myActorCharacter}>Character{el.character}</p>\n            <div>\n              {el.profile_path ? (\n                <img\n                  className={styles.myActorImg}\n                  src={`http://image.tmdb.org/t/p/w300${el.profile_path}`}\n                  alt={el.title}\n                />\n              ) : (\n                <img\n                  className={styles.myActorImg}\n                  src=\"https://png.pngtree.com/png-vector/20190803/ourlarge/pngtree-avatar-user-basic-abstract-circle-background-flat-color-icon-png-image_1647265.jpg\"\n                  height={200}\n                  width={140}\n                  alt={el.title}\n                />\n              )}\n            </div>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default Cast;","import axios from 'axios';\n\nconst key = '9300bf12d1efa3d214110c172e601b4c';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nconst instance = axios.create({\n  baseURL: BASE_URL,\n  params: {\n    language: 'en-US',\n    api_key: key,\n  },\n});\n\nexport const fetchHomeTrending = async () => {\n  const { data } = await instance.get('/trending/all/day');\n  return data;\n};\n\nexport const fetchSearch = async query => {\n  const { data } = await instance.get('/search/movie', {\n    params: {\n      query: query,\n      // include_adult: false,\n      // page: 1,\n    },\n  });\n  return data;\n};\n\nexport const fetchFullInfo = async movie_id => {\n  const { data } = await instance.get(`/movie/${movie_id}`);\n  return data;\n};\n\nexport const fetchActorInfo = async movie_id => {\n  const { data } = await instance.get(`/movie/${movie_id}/credits`);\n  return data;\n};\n\nexport const fetchGetReviews = async movie_id => {\n  const { data } = await instance.get(`movie/${movie_id}/reviews`);\n  return data;\n};"],"names":["_useState","useState","_useState2","_slicedToArray","actors","setActors","movieId","useParams","console","log","useEffect","fetchInfo","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","fetchActorInfo","sent","cast","t0","message","stop","apply","arguments","_jsx","children","className","styles","map","el","_jsxs","name","character","profile_path","src","concat","alt","title","height","width","id","instance","axios","baseURL","params","language","api_key","fetchHomeTrending","_yield$instance$get","data","get","abrupt","fetchSearch","_ref2","_callee2","query","_yield$instance$get2","_context2","_x","fetchFullInfo","_ref3","_callee3","movie_id","_yield$instance$get3","_context3","_x2","_ref4","_callee4","_yield$instance$get4","_context4","_x3","fetchGetReviews","_ref5","_callee5","_yield$instance$get5","_context5","_x4"],"sourceRoot":""}